# Task: PickGreenPepper

def compute_reward(self):
    # reward function
    asset_pose = self.env.get_position_by_asset_link_name("green_pepper", "green_pepper")
    gripper_pose = self.env.get_robot_gripper_position()
    distance_gripper_to_asset = torch.norm(gripper_pose - asset_pose, dim=-1)
    door_state = self.env.get_state_by_asset_joint_name("cabinet", "joint_1")
    cost = distance_gripper_to_asset - door_state
    reward = - cost
    # success condition
    success = torch.logical_and(distance_gripper_to_asset < 0.1)
    return reward, success